{"version":3,"sources":["jslibs/MyFilter.js","jslibs/MyPitchShifter.js","jslibs/PlayButton.js","jslibs/SpeedPitchControls.js","jslibs/TrackGainSlider.js","jslibs/TrackGainSliderList.js","App.js","jslibs/checkAudioWorklet.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["noop","MyFilter","pipe","callback","sourceSound","historyBufferSize","_sourcePosition","outputBufferPosition","_position","source","this","push","outSamples","numFramesReq","numFramesExtracted","length","set","slice","splice","numFrames","samples","Float32Array","extractSource","inputBuffer","putSamples","SimpleFilter","MyPitchShifter","context","numOfInputFrames","bufferSize","record","bypass","console","log","recordedSamples","lastPlayingAt","_soundtouch","SoundTouch","_filter","_onEnd","_onUpdate","_updateInterval","_node","createScriptProcessor","onaudioprocess","bind","_totalInputFrames","_recordedBuffer","_nVirtualOutputFrames","_playingAt","inSamples","sampleRate","nInputFrames","nframes","tempo","pitch","rate","createProcessedBuffer","func","val","name","disconnect","outputBuffer","createBuffer","left","getChannelData","right","e","passThrough","stop","nOutputFrames","process","playingAt","leftIn","rightIn","i","putSource","framesExtracted","extract","nc","numberOfChannels","channel","input","filename","blob","Blob","toWav","type","saveAs","PlayButton","props","nextProps","nextState","nextAction","messages","handler","icon","Tooltip","title","alert","IconButton","onClick","target","color","playButton","style","Component","SpeedPitchControls","playSpeed","playPitch","setSpeed","setPitch","pitchStr","Math","abs","toFixed","className","speedTitle1","speedTitle2","pitchTitle","TrackGainSlider","state","gain","initialGain","setState","parseFloat","value","trackName","id","min","max","onChange","TrackGainSliderList","nSliders","inputAudio","sliders","map","version","packageJSON","subversion","defaultLang","m","en","window","navigator","language","ja","AudioContext","webkitAudioContext","OfflineAudioContext","webkitOfflineAudioContext","result","isAudioContext","isOfflineAudioContext","isAudioWorkletNode","isAudioWorklet","isOfflineAudioWorklet","isAddModule","isOfflineAddModule","AudioWorkletNode","audioWorklet","addModule","close","checkAudioWorklet","isAudioWorkletAvailable","isOfflineAudioWorkletAvailable","App","audioCtx","mixedSource","masterGainNode","isPlaying","timeA","timeB","loop","loopDelay","playButtonNextAction","masterGain","useAudioWorklet","micOn","shifter","loadFiles","handlePlay","handleGainSlider","handleTimeSlider","playAB","switchLanguage","switchLang","worklet","fileReader","display","multiple","accept","clearFiles","document","getElementById","reset","forEach","element","data","clearButton","timeTitle","timeSliderPosition","duration","timeSlider","setA","setB","resetAB","playerTitle","stopButton","loopButton","exportButton","aria-label","playMixButton","bypassButton","masterGainTitle","trackGainTitle","href","url","rel","guide","credit","event","a","files","loadModule","reader","FileReader","onload","decodeAudioData","audioBuffer","gainNode","sort","b","error","err","onerror","readAsArrayBuffer","offline","suspend","resume","index","parseInt","speed","pow","delay","recording","exporter","channels","updateInterval","options","processorOptions","module","default","createBufferSource","buffer","addZeros","createGain","connect","node","destination","begin","currentTime","start","startRendering","onended","onUpdate","oncomplete","renderedBuffer","exportToFile","Date","now","playSource","onEnd","recordedBuffer","moduleName","workletOptions","constructor","output","ch","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.5d87071d.chunk.js","sourcesContent":["/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for use as intermediate ScriptProcessorNode.\n   Note: Output does not work for OfflineAudioContext.\n\n   1) PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   2) MyFilter extends SimpleFilter\n\n   Pitch modification and slow down/speed up work.\n   Slow down only for real-time playback.\n   fast playback is impossible by nature.\n\n */\n\nimport { SimpleFilter } from 'soundtouchjs'; \n\nconst noop = function () {return;}\n\nexport default class MyFilter extends SimpleFilter {\n  constructor(pipe, callback = noop){\n    super(null, pipe, callback); // sourceSound, callback are not used\n    this.callback = callback;\n    this.sourceSound = [];\n    this.historyBufferSize = 22050;\n    this._sourcePosition = 0;\n    this.outputBufferPosition = 0;\n    this._position = 0;\n  }\n\n/* new method to put samples from e.inputBuffer in onaudioprocess */\n  putSource(source){ \n    //console.log('putSource');\n    // for (let i = 0; i < source.length; i++) \n       //this.sourceSound.push(source[i]);\n    //\n   this.sourceSound.push([...source]);\n  } // LR interleaved\n\n/* new method replaces getWebAudioNode.extract() */\n  extractSource(outSamples, numFramesReq, frameOffset = 0){\n    // console.log('extractSource');\n   \n    let numFramesExtracted = 0;\n    if (this.sourceSound.length < numFramesReq*2) {\n      numFramesExtracted = 0;\n    } else { \n      outSamples.set(this.sourceSound.slice(0,numFramesReq*2));\n      this.sourceSound.splice(0,numFramesReq*2);\n      numFramesExtracted = numFramesReq;\n    }\n    return numFramesExtracted;\n  }\n\n/* Override */\n  fillInputBuffer(numFrames = 0){// samples are LRLR \n    const samples = new Float32Array(numFrames * 2);\n    const numFramesExtracted = this.extractSource(samples,numFrames);\n    if (numFramesExtracted > 0)\n      this.inputBuffer.putSamples(samples,0,numFramesExtracted);\n  } \n\n/* inherited (called when input is end. Not used)\n  onEnd() { this.callback(); }\n*/\n\n\n};\n","/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for use as intermediate ScriptProcessorNode.\n   Note: Output does not work for OfflineAudioContext.\n\n   1) PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   2) MyFilter extends SimpleFilter\n\n   Pitch modification and slow down/speed up work.\n   Slow down only for real-time playback.\n   fast playback is impossible by nature.\n\n */\n\nimport * as SoundTouch from 'soundtouchjs';\nimport MyFilter from './MyFilter';\nimport {saveAs} from 'file-saver';\nimport * as toWav from 'audiobuffer-to-wav';\n\nconst noop = function() {return;}\n\nexport default class MyPitchShifter {\n  constructor(context, numOfInputFrames, bufferSize, \n      record = false, bypass = false){\n    console.log('new MyPitchShifter instance');\n    this.context = context;\n    this.bufferSize = bufferSize;\n    this.record = record;\n    this.bypass = bypass;\n    this.recordedSamples = [[],[]];\n    this.lastPlayingAt = 0;\n\n    this._soundtouch = new SoundTouch.SoundTouch();\n    this._filter = new MyFilter(this._soundtouch, noop); \n    this._onEnd = noop;\n    this._onUpdate = noop;\n    this._updateInterval = 0.5;\n\n    this._node = context.createScriptProcessor(bufferSize,2,2);\n    this._node.onaudioprocess = this.onaudioprocess.bind(this);\n    this._totalInputFrames = numOfInputFrames;\n    this._recordedBuffer = null;\n    this._nVirtualOutputFrames = 0;\n    this._playingAt = 0;\n\n    this.outSamples = new Float32Array(bufferSize*2);\n    this.inSamples  = new Float32Array(bufferSize*2);\n    this.sampleRate = context.sampleRate; \n    this.nInputFrames = 0;\n\n   // this.process = this.process.bind(this);\n\n  }\n\n  set totalInputFrames(nframes){ this._totalInputFrames = nframes;}\n  get totalInputFrames(){ return this._totalInputFrames;}\n\n  get totalVirtualOutputFrames(){ return this._nVirtualOutputFrames;}\n\n  get playingAt(){\n    return this._playingAt;\n  }\n\n  get node(){ return this._node; }\n  set tempo(tempo){ this._soundtouch.tempo = tempo; }\n  get tempo(){ return this._soundtouch.tempo; }\n  set pitch(pitch){ this._soundtouch.pitch = pitch; }\n  get rate(){ return this._soundtouch.rate; }\n\n  get recordedBuffer(){ \n    if (this._recordedBuffer === null) this.createProcessedBuffer();\n    return this._recordedBuffer; \n  }\n\n  set onEnd(func){ this._onEnd = func; }\n  set onUpdate(func){ this._onUpdate = func; }\n  set updateInterval(val){ this._updateInterval = val;}\n  get updateInterval(){ return this._updateInterval;}\n\n  stop(){ \n    if (this._node.onaudioprocess) {\n      console.log(this.name, 'shifter stop');\n      this._node.onaudioprocess = null; \n      this._node.disconnect();\n      if (this._recordedBuffer === null) this.createProcessedBuffer();\n      this._onEnd(this._recordedBuffer);\n    }\n  }\n\n  createProcessedBuffer(){\n\n    if (!this.record) return;\n\n    const outputBuffer = this.context.createBuffer(\n      this.recordedSamples.length, // channels\n      this.recordedSamples[0].length, // sample length\n      this.sampleRate\n    );\n\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n    left.set(this.recordedSamples[0]);\n    right.set(this.recordedSamples[1]);\n    this.recordedSamples = [[],[]]; // clear Samples to save memory\n\n    this._recordedBuffer = outputBuffer;\n\n  } // end createProcessedBuffer()\n\n  onaudioprocess(e){\n    // console.log('onaudioprocess()');\n\n    if (this.bypass) { // pass through for test\n      if (this._nVirtualOutputFrames <= this._totalInputFrames){\n        this.passThrough(e.inputBuffer,e.outputBuffer); // through for test\n        this._nVirtualOutputFrames += e.outputBuffer.length;\n      } else this.stop();\n    } else {\n      if (this._nVirtualOutputFrames <= this._totalInputFrames){\n        const nOutputFrames = this.process(e.inputBuffer,e.outputBuffer);\n        this._nVirtualOutputFrames += nOutputFrames*this._soundtouch.tempo;\n      } else this.stop();\n    }\n\n   this._playingAt = this._nVirtualOutputFrames/this.sampleRate;\n\n   if (this.playingAt - this.lastPlayingAt >= this._updateInterval) {\n      this._onUpdate(this._playingAt);\n      this.lastPlayingAt = this._playingAt;\n   }\n\n   this.nInputFrames += e.inputBuffer.length; \n\n    return true;\n  }\n\n  process(inputBuffer,outputBuffer) { // using soundtouchjs \n    // console.log('MyPitchShifter process');\n    // input part\n    const leftIn = inputBuffer.getChannelData(0);\n    const rightIn = inputBuffer.getChannelData(1);\n    const inSamples = this.inSamples; // LR Interleave\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n\n    for (let i = 0; i < inputBuffer.length; i++) {\n        inSamples[2*i] = leftIn[i]; \n        inSamples[2*i + 1] = rightIn[i]; \n    }\n    this._filter.putSource(inSamples);\n\n   // Output  node.onaudioprocess in function getWebAudioNode\n   // context, filter, sourcePositionCallback\n    const outSamples = this.outSamples;\n    const framesExtracted = this._filter.extract(outSamples, this.bufferSize);\n\n    for (let i=0; i < framesExtracted; i++) {\n      left[i]  = outSamples[i * 2]; \n      right[i] = outSamples[i * 2 + 1];\n    } \n\n    if (this.record) {\n      this.recordedSamples[0].push([...left]);\n      this.recordedSamples[1].push([...right]);\n    }\n\n    return framesExtracted;\n\n  } // End process\n\n // just copy inputBuffer to outputBuffer for test \n  passThrough(inputBuffer, outputBuffer){ \n    const nc = outputBuffer.numberOfChannels;\n    for (let channel=0; channel < nc; channel++){\n      const input = inputBuffer.getChannelData(channel);\n      const output = outputBuffer.getChannelData(channel);\n      output.set(inputBuffer.getChannelData(channel)); \n\n      if (this.record) \n        // for (let i = 0; i < outputBuffer.length; i++) \n        //  this.recordedSamples[channel].push(input[i]);\n      this.recordedSamples[channel].push([...input]);\n    }\n\n  } // End pathThrough()\n\n  exportToFile (filename){\n    if (!this.record) return;\n\n    console.log ('exportToFile: ', filename,\n      'length: ', this.recordedSamples[0].length);\n\n    if (this._recordedBuffer === null) this.createProcessedBuffer();\n\n    const blob = new Blob([toWav(this._recordedBuffer)], \n       {type: 'audio/vnd.wav'});\n    saveAs(blob, filename);\n\n    return;\n  } // end exportToFile()\n\n};\n","import { Component } from 'react';\n\n// material-ui Icons, Tooltip\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineOutlinedIcon\n        from '@material-ui/icons/PauseCircleOutlineOutlined';\n\nexport default class PlayButton extends Component {\n  constructor(props){\n    super();\n  }\n\n// No setState() in shouldComponentUpdate\n  shouldComponentUpdate(nextProps, nextState){\n    if (nextProps.nextAction !== this.props.nextAction\n     || nextProps.messages !== this.props.messages)\n    return true;\n\n    return false;\n  }\n\n  render(){ // no state change\n\n    const {nextAction,messages,handler} = this.props;\n\n    let icon = null;\n    switch(nextAction){\n         case 'load files first!':\n           icon = \n             <Tooltip title={messages.alert}>\n             <span><IconButton\n             onClick={() => handler({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon color='disabled'/>\n             </IconButton></span></Tooltip>;\n         break;\n         case 'Play': \n           icon = <Tooltip title={messages.playButton}><IconButton  \n             onClick={() => handler({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon color='primary' />\n             </IconButton></Tooltip>;\n         break;\n         case 'Resume':\n           icon = <IconButton  \n             onClick={() => handler({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon style={{color: '#00aa00' }} />\n             </IconButton>;\n         break;\n         case 'Pause': \n           icon = <IconButton  \n             onClick={() => handler({target: {name: 'startPause'}})} >\n             <PauseCircleOutlineOutlinedIcon color='primary' />\n             </IconButton>;\n         break;\n         default:\n           icon = 'undefined';\n       }\n       return(<span>{icon}</span>);\n\n     } // end render\n\n};\n","import { Component } from 'react';\n\n// material-ui Icons\nimport { IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nexport default class SpeedPitchControls extends Component {\n  constructor(props){\n    super();\n  }\n\n  shouldComponentUpdate(nextProps, nextState){\n    if (nextProps.playSpeed !== this.props.playSpeed\n     || nextProps.playPitch !== this.props.playPitch\n     || nextProps.messages !== this.props.messages) return true;\n\n    return false;\n  }\n\n  render(){ // no state change\n\n    const {playSpeed, playPitch, messages, setSpeed, setPitch} = this.props;\n\n    const digits = Math.abs(playPitch);\n    let sign = ' ';\n    if (playPitch > 0) sign = '+'; \n    else if (playPitch < 0) sign = '-';\n    else sign = '*';\n    const pitchStr = sign + ('0000' + digits.toFixed(1)).slice(-4);\n\n    return(<span>\n    <span>\n     <div className='text-divider'>{messages.speedTitle1}&nbsp; \n       (<font color= 'green'>\n       {('000' + (100*playSpeed).toFixed(0)).slice(-3)}%)</font>\n       &nbsp; {messages.speedTitle2}\n    </div>\n\n      <center>\n     &plusmn; 10% <IconButton \n         onClick={() => setSpeed({target: {name: 'sub10'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n         onClick={() => setSpeed({target: {name: 'add10'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     &plusmn; 1% <IconButton\n        onClick={() => setSpeed({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => setSpeed({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n</center>\n\n     <div className='text-divider'>{messages.pitchTitle}&nbsp; \n (<font color='green'>{pitchStr}</font>) (-12 -- +12)</div>\n<center>\n     b/# <IconButton\n        onClick={() => setPitch({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => setPitch({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     &plusmn; 10 cents <IconButton\n        onClick={() => setPitch({target: {name: 'sub10c'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => setPitch({target: {name: 'add10c'}})} > \n     <AddIcon color='primary'/> </IconButton>\n      </center></span>\n\n      </span>); \n\n  } // end render\n\n};\n","import { Component } from 'react';\nimport '../App.css';\n\nexport default class TrackGainSlider extends Component {\n  constructor(props){\n    super();\n\n    this.state = { gain: props.initialGain, }; \n    // get initial gain from props and keep current gain locally\n\n    this.handler = this.handler.bind(this);\n  } \n\n\n  // update local state and notiry gain change to the handler in App.js\n  handler(e){ \n    this.setState({gain: parseFloat(e.target.value)});\n    this.props.handler(e); // notify gain change to App.js\n  }\n\n  render(){\n    const {trackName, id} = this.props;\n    const {gain} = this.state;\n\n    return (<div className='slider'>\n     {trackName} ({('000' + gain).slice(-3)})<br />\n      0 <input type='range' id={id} name='gainSlider'\n      min='0' max='100' value={gain}\n      onChange={this.handler} /> 100\n      </div>);\n    } // end render\n\n}; // End class TrackGainSlider\n","import { Component } from 'react';\nimport TrackGainSlider from './TrackGainSlider';\n\nexport default class TrackGainSliderList extends Component {\n  constructor(props){\n    super();\n    this.nSliders = props.inputAudio.length;\n  }\n\n// Update only if the number of audio tracks changed\n  shouldComponentUpdate(nextProps, nextState){\n    if (nextProps.inputAudio.length !== this.nSliders) {\n      this.nSliders = nextProps.inputAudio.length;\n      return true;\n    }\n    return false;\n  }\n\n  render(){\n    const {inputAudio, handler} = this.props;\n\n    // Creates track gain sliders\n    // and passes name, initialGain and handler to all sliders\n    const sliders = inputAudio.map(\n       (e,i) => {\n       return(\n        <TrackGainSlider key={i} id={i} trackName={e.name} \n          initialGain={e.gain} handler={handler} />\n       );\n      }\n    );\n\n    return (<div><center>{sliders}</center></div>);\n\n  } // end render\n\n}; // End class TrackGainSliderList\n","/*\n\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   AudioWorkletNode and AudioWorkletProcessor is used if available.\n\n   AudioWorkletProcessor code is in public/worklet/ \n      (public is the document root.)\n\n   Status:\n     ScriptProcessorNode (Chrome, Firefox, Safari)\n       -- AudioContext, OfflineAudioContext (e.renderedBuffer is NOT usable)\n\n     AudioWorkletNode/AudioWorkletProcessor (Chrome, Firefox)\n       -- AudioContext, OfflineAudioContext (e.renderedBuffer is usable)\n\n     Safari does not implement AudioWorklet at all.\n     This app is quite memory intensive and may not work on smartphones.\n\n   See details in docs/ and demo page.\n\n */\n\nimport { Component }  from 'react';\nimport './App.css';\nimport checkAudioWorklet from './jslibs/checkAudioWorklet';\nimport MyPitchShifter from './jslibs/MyPitchShifter'; // soundtouchJS\n\n// UI Components\nimport PlayButton from './jslibs/PlayButton';\nimport SpeedPitchControls from './jslibs/SpeedPitchControls';\nimport TrackGainSliderList from './jslibs/TrackGainSliderList';\n\nimport packageJSON from '../package.json';\nimport messages from './messages.json'; // English/Japanese messages\n\n// material-ui Icons, Tooltip\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport StopOutlinedIcon from '@material-ui/icons/StopOutlined';\nimport LoopOutlinedIcon from '@material-ui/icons/LoopOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PlayCircleFilledWhiteIcon \n   from '@material-ui/icons/PlayCircleFilledWhite';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport MoodIcon from '@material-ui/icons/Mood';\nimport MicIcon from '@material-ui/icons/Mic';\n\n// get subversion string \nconst version = packageJSON.subversion;\n\n// switch languages\nlet defaultLang = 'en';\nlet m = messages.en;\nconsole.log(window.navigator.language);\nif (window.navigator.language.slice(0,2) === 'ja') {\n  defaultLang = 'ja'; \n  m = messages.ja;\n}\n\n\n// For Safari\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst OfflineAudioContext \n    = window.OfflineAudioContext || window.webkitOfflineAudioContext;\n\nconst result = checkAudioWorklet();\n\nconst {isAudioContext, isOfflineAudioContext, isAudioWorkletNode,\n       isAudioWorklet, isAddModule, isOfflineAddModule,\n       isOfflineAudioWorklet } = result;\n\nconst isAudioWorkletAvailable = isAudioContext & isAudioWorkletNode \n      & isAudioWorklet & isAddModule;\nconst isOfflineAudioWorkletAvailable = isOfflineAudioContext \n      & isAudioWorkletNode & isOfflineAudioWorklet & isOfflineAddModule;\n\nconsole.log('AudioWorklet available? :', \n'online: ', isAudioWorkletAvailable ? 'true' : 'false',\n', offline: ', isOfflineAudioWorkletAvailable ? 'true' : 'false');\n\n// Conditional dynamic import only if AudioWorklet is available\n\nclass App extends Component {\n\n  constructor (props) {\n    super();\n    this.audioCtx = null;\n    this.inputAudio = []; // filled in loadFiles\n    this.mixedSource = null;\n    this.masterGainNode = null;\n \n    this.state = {\n      language: defaultLang,\n      isPlaying: false,\n      timeA: 0,\n      playingAt: 0,\n      timeB: 0, \n      loop: false,\n      loopDelay: 2,\n      playButtonNextAction: 'load files first!',\n      masterGain: 75,\n      playSpeed: 1.0,\n      playPitch: 0.0,\n      bypass: false,\n      useAudioWorklet: isAudioWorkletAvailable,\n      micOn: false,\n    };\n\n    this.shifter = null;\n\n    this.loadFiles = this.loadFiles.bind(this);\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleGainSlider = this.handleGainSlider.bind(this);\n    this.handleTimeSlider = this.handleTimeSlider.bind(this);\n    this.playAB = this.playAB.bind(this);\n    this.setSpeed = this.setSpeed.bind(this);\n    this.setPitch = this.setPitch.bind(this);\n    this.switchLanguage = this.switchLanguage.bind(this);\n  }   \n\n  componentWillUnmount () { // before closing app\n    if (this.audioCtx !== null) this.audioCtx.close();\n  }\n\n  render(){\n\n    return (\n     <div className=\"App\">\n     {m.title}\n     <br />\n\n{/* language selection */}\n     <center>\n     (language) &ensp;\n     <span className='tiny-button'>\n     <Tooltip title={m.switchLang}>\n      <button onClick = {this.switchLanguage}>\n      {this.state.language === 'ja' ? 'EN' : 'JP' }</button>\n     </Tooltip>\n     </span>&ensp;\n{/* AudioWorklet on/off */}\n(AudioWorklet)\n     <Tooltip title={m.worklet}>\n     <IconButton name='toggleWorklet'\n     onClick = {\n       () => {\n        if (isAudioWorkletNode)\n        this.setState({useAudioWorklet: !this.state.useAudioWorklet});}\n     } >\n     <MoodIcon color={this.state.useAudioWorklet? 'primary':'disabled'} />\n     </IconButton>\n     </Tooltip>\n     </center>\n     <hr />\n\n{/* loading file(s) */}\n     <span className='selectFile'>\n     <Tooltip title={m.fileReader}>\n     <form id='fileLoader' style={{display: 'inline'}}>\n     <input type='file' name=\"loadFiles\" multiple\n        accept=\"audio/*\" onChange={this.loadFiles} />\n     </form>\n     </Tooltip>\n     &emsp;\n{/* clear input files */}\n<span className='tiny-button'>\n     <Tooltip title={m.clearFiles}>\n     <button name='clearFile' onClick = {() => {\n        if (this.state.isPlaying) return;\n        this.setState({playButtonNextAction: 'load files first!'});\n        document.getElementById('fileLoader').reset();\n        this.inputAudio.forEach ((element) => {delete element.data;});\n        this.inputAudio = []; }} \n     >{m.clearButton}</button></Tooltip></span>\n     <br />\n     </span><br/>\n{/* time sliders */}\n     <div className='text-divider'>{m.timeTitle}&nbsp;\n      ({m.timeSliderPosition}:&nbsp; \n       <font color='green'>\n       {('00000' + this.state.playingAt.toFixed(1)).slice(-5)}</font>)\n     </div>\n\n{/* time A, B, song length */}\n     <center>\n     A: {('00000' + this.state.timeA.toFixed(1)).slice(-5)} \n         -- B: {('00000' + this.state.timeB.toFixed(1)).slice(-5)}\n     &emsp; song length: {this.inputAudio[0] ? \n    ('00000' + this.inputAudio[0].data.duration.toFixed(1)).slice(-5) : 0.00}\n     <br />\n     <div className='slider'>\n     <Tooltip title={m.timeSlider}>\n     <input type='range' name='timeSlider'\n       min='0' max= {this.inputAudio[0] ? \n              this.inputAudio[0].data.duration : 0}\n       value={this.state.playingAt}\n       onChange={this.handleTimeSlider}\n     />\n     </Tooltip>\n     </div>\n\n{/* set TimeA, B, reset */}\n\n     <span className='tiny-button'>\n     <Tooltip title={m.setA}>\n     <button name='setA' \n        onClick={()=> this.setState({timeA: this.state.playingAt})}>\n        set A\n     </button>\n     </Tooltip>\n      &emsp;\n     <Tooltip title={m.setB}>\n     <button name='setB' \n        onClick={()=> this.setState({timeB: this.state.playingAt})}>\n        set B\n     </button>\n     </Tooltip>\n      &emsp;\n     <Tooltip title={m.resetAB}>\n     <button name='reset' \n         onClick={()=> this.setState({timeA: 0, \n          timeB: this.inputAudio[0].data.duration})}>reset\n     </button>\n     </Tooltip>\n     </span>\n     </center>\n     <br />\n\n{/* Player controls */}\n     <div className='text-divider'>{m.playerTitle}</div>\n     <center>\n{/* Microphone on/off (toggle state.micOn) */}\n    <Tooltip title={m.record}>\n    <IconButton \n     onClick={()=> this.setState({micOn: !this.state.micOn})} >\n    <MicIcon color={this.state.micOn ? 'secondary' : 'primary'} />\n    </IconButton>\n    </Tooltip>\n\n   {/* Play button with switching icons in separate file */}\n    <PlayButton \n      nextAction={this.state.playButtonNextAction}\n      handler={this.handlePlay}\n      messages={m}\n   />\n   {/* Stop button */}\n     <Tooltip title={m.stopButton}>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'stop'}})} >\n       <StopOutlinedIcon \n     color={this.inputAudio.length ? 'primary' : 'disabled'} />\n     </IconButton>\n     </Tooltip>\n     <Tooltip title={m.loopButton}>\n     <IconButton  \n       onClick={() => {this.setState({loop: !this.state.loop});}} >\n       <LoopOutlinedIcon \n       color={this.state.loop ? 'secondary' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n    {/* File export */}\n     <Tooltip title={m.exportButton} aria-label='exportFile'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'exportFile'}})} >\n       <GetAppIcon \n       color={!this.inputAudio.length \n         || this.state.isPlaying ? 'disabled' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n\n    {/* play Mix after rendering audio (online for ScriptProcessor) */}\n     <Tooltip title={m.playMixButton} aria-label='playMix'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'playMix'}})} >\n       <PlayCircleFilledWhiteIcon\n       color={!this.inputAudio.length || this.state.isPlaying ? 'disabled' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n    {/* bypass processing */}\n     <Tooltip title={m.bypassButton}>\n     <IconButton\n       onClick={() => \n        { if (this.state.isPlaying) return;\n          this.setState({bypass: !this.state.bypass})}\n      }>\n       <NotInterestedIcon\n       color={this.state.bypass ? 'disabled' : 'primary'} />\n    </IconButton>\n     </Tooltip>\n\n     </center>\n{/* Speed controls in separate file */}\n    {this.state.bypass ?  '' : \n    <SpeedPitchControls \n      playSpeed={this.state.playSpeed}\n      playPitch={this.state.playPitch}\n      setSpeed={this.setSpeed}\n      setPitch={this.setPitch}\n      messages={m}\n    />\n    }\n\n{/* Master Gain control */}\n     <div className='slider' key='master'>\n       <div className='text-divider'>{m.masterGainTitle}&nbsp;\n       ({('000' + this.state.masterGain).slice(-3)})</div>\n       <center>\n       0 <input type='range' id='master' name='gainSlider' \n          min='0' max='150' \n          value={this.state.masterGain}\n           onChange={this.handleGainSlider} /> 150\n       </center>\n     </div>\n\n{/* Track gain controls in separate file */}\n     <br />\n     <div className='text-divider'>{m.trackGainTitle}</div>\n     <TrackGainSliderList\n        inputAudio={this.inputAudio} \n        handler={this.handleGainSlider}\n     />\n     <hr />\n\n{/* version and help URL */}\n     {m.version}: {version} &nbsp;&nbsp;\n     <a href={m.url}\n     target='_blank' rel='noreferrer'>{m.guide}</a><br />\n     {m.credit}&nbsp; \n     <a href=\"https://github.com/cutterbl/SoundTouchJS\"\n     target='_blank' rel='noreferrer'>SoundTouchJs</a><br />\n     <hr />\n     </div>\n    );\n  }\n\n  async loadFiles(event){\n\n    if (event.target.name !== 'loadFiles') return;\n    if (event.target.files.length === 0) return;\n    const files = event.target.files; \n\n    console.log('loadFiles', files);\n\n    if (this.audioCtx === null) {\n      console.log('AudioContext');\n      this.audioCtx = new AudioContext();\n      try {\n        if (isAudioWorkletAvailable) {\n          await this.loadModule(this.audioCtx,'worklet/bundle.js');\n          console.log('AudioContext worklet module loaded');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    for (let i=0; i < files.length; i++){\n      const reader = new FileReader();\n\n      reader.onload = function (e){\n       this.audioCtx.decodeAudioData(reader.result,\n         function (audioBuffer) {\n           if (audioBuffer.numberOfChannels !== 2) {\n             alert ('Sorry, only stereo files are supported');\n             return;\n           }\n           this.inputAudio.push({\n              name: files[i].name,\n              data: audioBuffer,\n              source: null,\n              gainNode: null,\n              gain: 100,\n           });\n\n           this.inputAudio.sort((a,b) => {\n             if(a.name < b.name) return -1;\n             if (a.name > b.name) return 1;\n             return 0;\n           });\n     \n           this.setState({\n             playButtonNextAction: 'Play',\n               timeA: 0,\n               playingAt: 0,\n               timeB: this.inputAudio[0].data.duration, \n           });\n\n     // this.inputAudio.sort((a,b) => a.name - b.name); // mmm.. does not work\n\n         }.bind(this),\n\n         function (error) { console.log (\"decode error: \" + error.err) }\n       )\n\n      }.bind(this)\n\n      reader.onerror = function (e){ console.log(\"File read \", reader.error);}\n      reader.readAsArrayBuffer(files[i]);\n\n    } // end for\n\n  } // end loadFiles()\n\n  handleTimeSlider(event){\n\n    if(event.target.name !== 'timeSlider') return;\n    if (!this.state.isPlaying)\n      this.setState({playingAt: parseFloat(event.target.value)});\n  }\n\n  handlePlay(event){\n\n    console.log('handlePlay name/button', \n       event.target.name, this.state.playButtonNextAction);\n\n    if (this.inputAudio.length === 0) alert(m.alert);\n\n    if (event.target.name === 'startPause') {\n\n      switch(this.state.playButtonNextAction){\n\n        case 'Pause':\n          console.log('Pause');\n          if(this.audioCtx) this.audioCtx.suspend();\n          this.setState ({\n            playButtonNextAction: 'Resume',\n            isPlaying: false \n          });\n        break;\n\n        case 'Resume': \n          console.log('Resume');\n          if (this.audioCtx.state === 'suspended') this.audioCtx.resume();\n          this.setState ({\n            playButtonNextAction: 'Pause', \n            isPlaying: true\n          });\n        break;\n\n        case 'Play':\n          console.log('Play');\n          if (this.inputAudio.length === 0) break;\n           this.playAB (0, this.state.timeA, this.state.timeB);\n\n          this.setState ({playButtonNextAction: 'Pause'})\n        break;\n\n        default:\n          console.log('default', this.state.playButtonNextAction);\n      }\n\n      return;\n    }\n\n    if (event.target.name === 'stop') {\n      if (this.shifter) this.shifter.stop();\n      if (this.mixedSource) this.mixedSource.stop();\n\n      this.setState ({loop: false, playButtonNextAction: 'Play', \n          playingAt: this.state.timeA})\n\n      return;\n    }    \n\n    if (event.target.name === 'exportFile' \n       || event.target.name === 'playMix'){\n\n      if (this.inputAudio.length === 0 || this.state.isPlaying) return;\n\n      const recording = true;\n      let offline = isOfflineAudioContext;\n      this.playAB (0, this.state.timeA, this.state.timeB, \n          recording, offline, event.target.name);\n\n      return;\n    }\n\n  } // end handlePlay()\n\n  handleGainSlider(event){\n    if (event.target.name !== 'gainSlider') return;\n      // console.log ('slider id= ', event.target.id);\n// \n    if (event.target.id === 'master'){\n      this.setState({masterGain: parseFloat(event.target.value)});\n      if (this.masterGainNode)\n        this.masterGainNode.gain.value = parseFloat(event.target.value/100.0);\n      return;\n    }\n\n    const index = parseInt(event.target.id);\n\n    const inputAudio = this.inputAudio[index];\n    inputAudio.gain = parseInt(event.target.value);\n    if (inputAudio.gainNode !== null)\n      inputAudio.gainNode.gain.value \n           = parseFloat(event.target.value/100.0); \n\n  } // End handleGainSlider()\n\n  setSpeed(e){\n    let speed = this.state.playSpeed;\n    switch(e.target.name){\n      case 'sub10': speed -=0.1; break;\n      case 'add10': speed +=0.1; break;\n      case 'sub1': speed -=0.01; break;\n      case 'add1': speed +=0.01; break;\n      default:\n    }\n    if (speed < 0.5) speed = 0.5;\n    else if (speed > 2.0) speed = 2.0;\n\n    if (this.shifter) this.shifter.tempo = speed;\n\n    this.setState({playSpeed: speed});\n  } // End set speed\n\n  setPitch(e){\n    let pitch = this.state.playPitch;\n    switch(e.target.name){\n      case 'sub1': pitch -=1; break;\n      case 'add1': pitch +=1; break;\n      case 'sub10c': pitch -=0.1; break;\n      case 'add10c': pitch +=0.1; break;\n      default:\n    }\n\n    if (pitch < -12) pitch = -12.0;\n    else if (pitch > 12) pitch = 12.0\n\n    if (this.shifter) this.shifter.pitch = Math.pow(2.0,pitch/12.0);\n\n    this.setState({playPitch: pitch});\n\n  } // End setPitch\n\n  switchLanguage(e) {\n\n    if (this.state.language === 'ja') {\n      m = messages.en; \n      this.setState({language: 'en'});\n    } else {\n      m = messages.ja; \n      this.setState({language: 'ja'});\n    }\n  } // End switchLanguage()\n\n  async playAB(delay, timeA, timeB, \n       recording = false, offline = false, exporter='none'){\n\n    if (this.state.isPlaying) return;\n\n    if (this.audioCtx.state === 'suspended' ) this.audioCtx.resume();\n\n    const sampleRate = this.inputAudio[0].data.sampleRate;\n    const channels = this.inputAudio[0].data.numberOfChannels;\n    const nInputFrames = (timeB - timeA)*sampleRate;\n    const nOutputFrames = Math.max(nInputFrames, \n                      nInputFrames/this.state.playSpeed);\n\n    let context = null;\n    if (offline){\n      context = new OfflineAudioContext (\n        channels,\n        nOutputFrames*1.1, // add 10%\n        sampleRate \n      );\n      if (this.state.useAudioWorklet) {\n        await this.loadModule (context, 'worklet/bundle.js');\n        console.log('OfflineAudioContext Worklet module loaded');\n      }\n      if (OfflineAudioContext.suspend) context.suspend();\n    } else context = this.audioCtx;\n\n    this.setState({isPlaying : true});\n\n    let updateInterval = 1.0;\n    if (offline) updateInterval = 10.0;\n\n    const options = { // For worklet \n      processorOptions: {\n        bypass: this.state.bypass,\n        recording: false, // recording is done in OfflineAudioContext\n        nInputFrames: nInputFrames, \n        updateInterval: updateInterval, \n        sampleRate: sampleRate\n      },\n    };\n\n    let shifter = null;\n    if (!this.state.useAudioWorklet) { \n        // Offline worklet not working perfectly yet\n      shifter = new MyPitchShifter( context, nInputFrames, \n        4096, recording, this.state.bypass); // ScriptProcessorNode\n      shifter.updateInterval = updateInterval;\n    } else { // Use worklet\n      try {\n        // Dynamic import to avoid \"Safari misses AudioWorkletnode\"\n        const module\n          = await import('./jslibs/MyPitchShifterWorkletNode');\n        delete this.shifter; this.shifter = null;\n        shifter = new module.default(context, \n          'my-soundtouch-processor', options); \n           console.log('AudioWorkletNode functional');\n        shifter.updateInterval = updateInterval;\n      } catch (err) { \n        console.log(err);\n        delete this.shifter; this.shifter = null;\n        shifter = new MyPitchShifter( context, nInputFrames, \n          4096, recording, this.state.bypass); // ScriptProcessorNode\n        shifter.updateInterval = updateInterval;\n        console.log('Worklet failed. Fallback to ScriptProcessorNode');\n        // Creation of shifter does not work for Online (reason unknown)\n\n      }\n    } // end if useAudioWorklet \n\n    if (!offline) this.shifter = shifter;\n\n    shifter.tempo = this.state.playSpeed;\n    shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0);\n\n    for (let i=0; i < this.inputAudio.length; i++){\n      const inputAudio = this.inputAudio[i];\n      const source = context.createBufferSource();\n      if (i === 0)\n         source.buffer = this.addZeros(context,inputAudio.data);\n       else \n         source.buffer = inputAudio.data;\n        inputAudio.source = source;\n      const gainNode = context.createGain();\n        gainNode.gain.value = inputAudio.gain/100.0;\n        inputAudio.gainNode = gainNode;\n      source.connect(gainNode);\n      gainNode.connect(shifter.node);\n    }\n\n  if (!offline) {\n    const masterGainNode = context.createGain();\n    masterGainNode.gain.value = this.state.masterGain/100.0;\n    this.masterGainNode = masterGainNode;\n    shifter.node.connect(masterGainNode);\n    masterGainNode.connect(context.destination);\n  } else shifter.node.connect(context.destination);\n\n\n    const begin = context.currentTime + delay;\n    for (let i=0; i < this.inputAudio.length; i++)\n      this.inputAudio[i].source.start(begin, timeA);\n\n    // dummySourceNode.start(begin, timeA);\n\n    if (offline) {\n      console.log('startRendering');\n      context.startRendering();\n    }\n\n    this.inputAudio[0].source.onended = function(e) {\n       /* this.inputAudio.forEach ( (element) => { \n         delete element.source.buffer;}); */\n       console.log('source 0 onended At', this.state.playingAt);\n    }.bind(this);\n\n    shifter.onUpdate = function(val) { \n      this.setState({playingAt: timeA + val});\n    }.bind(this);\n\n    if (offline) {\n      context.oncomplete = function(e) {\n        console.log( \n         'Offline render complete (data is useless though) length = ',\n          e.renderedBuffer.length);\n\n        if (this.state.useAudioWorklet){\n          if (exporter === 'exportFile') {\n            console.log('exportFile in oncomlete'); \n            shifter.exportToFile('mix_' + Date.now() + '.wav', \n              e.renderedBuffer);\n          } else if (exporter === 'playMix') {\n            console.log('playMix in oncomlete'); \n            this.playSource(e.renderedBuffer);\n          } else console.log('exporter unknown: ', exporter);\n        }\n\n      }.bind(this);\n    }\n\n    shifter.onEnd = function(recordedBuffer) { \n       // recordedBuffer made in shifter from worklet's message data\n      console.log('shifter onEnd');\n\n      for (let i=0; i < this.inputAudio.length; i++)\n      this.inputAudio.forEach (\n        (element) => { \n          element.gainNode.disconnect();\n          element.source.buffer = null;\n        }\n      );\n\n      this.setState({isPlaying: false});\n\n      if (!this.state.useAudioWorklet) {\n        if (exporter === 'exportFile' ) {\n          shifter.exportToFile('mix_' + Date.now() + '.wav');\n          this.setState({isPlaying: false}); // audioBuffer is in the shifter\n        } else if (exporter === 'playMix')\n          this.playSource(recordedBuffer);\n      }\n\n      if (this.state.loop) {\n        this.setState({playingAt: this.state.timeA});\n        this.playAB (this.state.loopDelay, this.state.timeA, this.state.timeB);\n      }\n\n   }.bind(this);\n\n  } // END playAB\n\n  async loadModule (\n    context,filename,moduleName,workletOptions) {\n      if (!context) return false;\n      let name = context.constructor.name;\n\n      try {\n        await context.audioWorklet.addModule(filename);\n        //console.log(name, 'AudioWorklet loaded');\n      } catch(e) {\n        console.log(e, name, 'AudioWorklet load failed');\n        return null\n      }\n\n    return true;\n  }\n\n  addZeros(context,input){ // return zero padded double length AudioBuffer\n    console.log('addZeros');\n    const output = context.createBuffer(\n      input.numberOfChannels, \n      input.length*2*1.05, // extra 5%\n      input.sampleRate\n    ); // additional 5 sec\n\n    for (let ch = 0; ch < output.numberOfChannels; ch++){\n      const inSamples = input.getChannelData(ch);\n      const outSamples = output.getChannelData(ch);\n      outSamples.set(inSamples);\n    }\n\n    return output;\n  } // End addZeros()\n\n\n  playSource(audioBuffer){ \n     if (audioBuffer === null) {console.log('audioBuffer null'); return;}\n\n     const context = this.audioCtx;\n     this.setState({isPlaying: true, playButtonNextAction: 'Pause'});\n     const source = context.createBufferSource();\n     this.mixedSource = source;\n     source.buffer = audioBuffer;\n     const masterGainNode = context.createGain();\n       this.masterGainNode = masterGainNode;\n       masterGainNode.gain.value = this.state.masterGain/100;\n     source.connect(this.masterGainNode);\n       masterGainNode.connect(context.destination);\n     source.start();\n\n     source.onended = function(e) {\n       this.mixedSource.buffer = null;\n       this.mixedSource = null;\n       this.setState({isPlaying: false});\n     }.bind(this);\n  }\n\n}; // end class\n\nexport default App;\n","/* by goto at kmgoto.jp (Mar. 2021) */\n\nexport default function checkAudioWorklet() {\n\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const OfflineAudioContext = window.OfflineAudioContext \n      || window.webkitOfflineAudioContext;\n\n  let isAudioContext = false;\n  let isOfflineAudioContext = false;\n  let isAudioWorkletNode = false;\n  let isAudioWorklet = false;\n  let isOfflineAudioWorklet = false;\n  let isAddModule = false;\n  let isOfflineAddModule = false;\n\n  if (typeof AudioContext === 'function') isAudioContext = true;\n  if (typeof OfflineAudioContext === 'function') isOfflineAudioContext = true;\n  if (typeof AudioWorkletNode === 'function') isAudioWorkletNode = true;\n\n  if (isAudioContext) {\n    const context = new AudioContext();\n    try {\n      if (typeof context.audioWorklet !== 'undefined') {\n        isAudioWorklet = true;\n        if (typeof context.audioWorklet.addModule === 'function') \n        isAddModule = true;\n      }\n    } catch(e) {console.log(e);}\n    context.close();\n  }\n\n  if (isOfflineAudioContext){\n    const context = new OfflineAudioContext(1,1,44100);\n    try {\n      if (typeof context.audioWorklet !== 'undefined'){ \n        isOfflineAudioWorklet = true;\n        if (typeof context.audioWorklet.addModule === 'function') \n          isOfflineAddModule = true;\n        }\n    } catch(e) {console.log(e);}\n  }\n\n  return {\n    isAudioContext: isAudioContext,\n    isOfflineAudioContext: isOfflineAudioContext,\n    isAudioWorkletNode: isAudioWorkletNode,\n    isAudioWorklet: isAudioWorklet,\n    isOfflineAudioWorklet: isOfflineAudioWorklet,\n    isAddModule: isAddModule,\n    isOfflineAddModule: isOfflineAddModule,\n  };\n} // end function\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n  ReactDOM.render(\n   <App />,\n  document.getElementById('root')\n  );\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}