{"version":3,"sources":["jslibs/MyFilter.js","jslibs/MyPitchShifter.js","jslibs/PlayButton.js","jslibs/SpeedPitchControls.js","jslibs/TrackGainSlider.js","jslibs/TrackGainSliderList.js","App.js","jslibs/checkAudioWorklet.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["noop","MyFilter","pipe","callback","sourceSound","historyBufferSize","_sourcePosition","outputBufferPosition","_position","source","i","length","this","push","outSamples","numFramesReq","numFramesExtracted","set","slice","splice","numFrames","samples","Float32Array","extractSource","inputBuffer","putSamples","SimpleFilter","MyPitchShifter","context","numOfInputFrames","bufferSize","record","bypass","console","log","recordedSamples","lastPlayingAt","_soundtouch","SoundTouch","_filter","_onEnd","_onUpdate","_updateInterval","_node","createScriptProcessor","onaudioprocess","bind","_totalInputFrames","_recordedBuffer","_nVirtualOutputFrames","_playingAt","inSamples","sampleRate","nInputFrames","nframes","tempo","pitch","rate","createProcessedBuffer","func","val","name","disconnect","outputBuffer","createBuffer","left","getChannelData","right","e","passThrough","stop","nOutputFrames","process","playingAt","leftIn","rightIn","putSource","framesExtracted","extract","nc","numberOfChannels","channel","input","filename","blob","Blob","toWav","type","saveAs","PlayButton","props","state","nextAction","m","messages","handler","prevProps","setState","icon","Tooltip","title","alert","IconButton","onClick","target","color","playButton","style","Component","SpeedPitchControls","playSpeed","playPitch","setSpeed","setPitch","className","speedTitle1","toFixed","speedTitle2","pitchTitle","TrackGainSlider","gain","id","trackName","undefined","min","max","value","onChange","TrackGainSliderList","inputAudio","gains","version","packageJSON","subversion","defaultLang","en","window","navigator","language","ja","AudioContext","webkitAudioContext","OfflineAudioContext","webkitOfflineAudioContext","result","isAudioContext","isOfflineAudioContext","isAudioWorkletNode","isAudioWorklet","isOfflineAudioWorklet","isAddModule","isOfflineAddModule","AudioWorkletNode","audioWorklet","addModule","close","checkAudioWorklet","isAudioWorkletAvailable","isOfflineAudioWorkletAvailable","App","audioCtx","mixedSource","masterGainNode","isPlaying","timeA","timeB","loop","loopDelay","playButtonNextAction","masterGain","useAudioWorklet","micOn","shifter","loadFiles","handlePlay","handleGainSlider","handleTimeSlider","playAB","switchLanguage","switchLang","worklet","fileReader","multiple","accept","clearFiles","clearButton","timeTitle","timeSliderPosition","data","duration","timeSlider","setA","setB","resetAB","playerTitle","stopButton","loopButton","exportButton","aria-label","playMixButton","bypassButton","masterGainTitle","trackGainTitle","href","url","rel","guide","credit","event","a","files","loadModule","reader","FileReader","onload","decodeAudioData","audioBuffer","gainNode","error","err","onerror","readAsArrayBuffer","parseFloat","offline","suspend","resume","index","parseInt","speed","Math","pow","delay","recording","exporter","channels","updateInterval","options","processorOptions","module","default","createBufferSource","buffer","addZeros","createGain","connect","node","destination","begin","currentTime","start","startRendering","onUpdate","oncomplete","renderedBuffer","exportToFile","Date","now","playSource","onEnd","recordedBuffer","moduleName","workletOptions","constructor","output","ch","onended","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.519b1dd1.chunk.js","sourcesContent":["/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for use as intermediate ScriptProcessorNode.\n   Note: Output does not work for OfflineAudioContext.\n\n   1) PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   2) MyFilter extends SimpleFilter\n\n   Pitch modification and slow down/speed up work.\n   Slow down only for real-time playback.\n   fast playback is impossible by nature.\n\n */\n\nimport { SimpleFilter } from 'soundtouchjs'; \n\nconst noop = function () {return;}\n\nexport default class MyFilter extends SimpleFilter {\n  constructor(pipe, callback = noop){\n    super(null, pipe, callback); // sourceSound, callback are not used\n    this.callback = callback;\n    this.sourceSound = [];\n    this.historyBufferSize = 22050;\n    this._sourcePosition = 0;\n    this.outputBufferPosition = 0;\n    this._position = 0;\n  }\n\n/* new method to put samples from e.inputBuffer in onaudioprocess */\n  putSource(source){ \n    //console.log('putSource');\n    for (let i = 0; i < source.length; i++) \n       this.sourceSound.push(source[i]);\n  } // LR interleaved\n\n/* new method replaces getWebAudioNode.extract() */\n  extractSource(outSamples, numFramesReq, frameOffset = 0){\n    // console.log('extractSource');\n   \n    let numFramesExtracted = 0;\n    if (this.sourceSound.length < numFramesReq*2) {\n      numFramesExtracted = 0;\n    } else { \n      outSamples.set(this.sourceSound.slice(0,numFramesReq*2));\n      this.sourceSound.splice(0,numFramesReq*2);\n      numFramesExtracted = numFramesReq;\n    }\n    return numFramesExtracted;\n  }\n\n/* Override */\n  fillInputBuffer(numFrames = 0){// samples are LRLR \n    const samples = new Float32Array(numFrames * 2);\n    const numFramesExtracted = this.extractSource(samples,numFrames);\n    if (numFramesExtracted > 0)\n      this.inputBuffer.putSamples(samples,0,numFramesExtracted);\n  } \n\n/* inherited (called when input is end. Not used)\n  onEnd() { this.callback(); }\n*/\n\n\n};\n","/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   Modified for use as intermediate ScriptProcessorNode.\n   Note: Output does not work for OfflineAudioContext.\n\n   1) PitchShifter ---> MyPitchShifter (minimum code)\n                     includes ScriptProcessorNode\n\n   2) MyFilter extends SimpleFilter\n\n   Pitch modification and slow down/speed up work.\n   Slow down only for real-time playback.\n   fast playback is impossible by nature.\n\n */\n\nimport * as SoundTouch from 'soundtouchjs';\nimport MyFilter from './MyFilter';\nimport {saveAs} from 'file-saver';\nimport * as toWav from 'audiobuffer-to-wav';\n\nconst noop = function() {return;}\n\nexport default class MyPitchShifter {\n  constructor(context, numOfInputFrames, bufferSize, \n      record = false, bypass = false){\n    console.log('new MyPitchShifter instance');\n    this.context = context;\n    this.bufferSize = bufferSize;\n    this.record = record;\n    this.bypass = bypass;\n    this.recordedSamples = [[],[]];\n    this.lastPlayingAt = 0;\n\n    this._soundtouch = new SoundTouch.SoundTouch();\n    this._filter = new MyFilter(this._soundtouch, noop); \n    this._onEnd = noop;\n    this._onUpdate = noop;\n    this._updateInterval = 0.5;\n\n    this._node = context.createScriptProcessor(bufferSize,2,2);\n    this._node.onaudioprocess = this.onaudioprocess.bind(this);\n    this._totalInputFrames = numOfInputFrames;\n    this._recordedBuffer = null;\n    this._nVirtualOutputFrames = 0;\n    this._playingAt = 0;\n\n    this.outSamples = new Float32Array(bufferSize*2);\n    this.inSamples  = new Float32Array(bufferSize*2);\n    this.sampleRate = context.sampleRate; \n    this.nInputFrames = 0;\n\n   // this.process = this.process.bind(this);\n\n  }\n\n  set totalInputFrames(nframes){ this._totalInputFrames = nframes;}\n  get totalInputFrames(){ return this._totalInputFrames;}\n\n  get totalVirtualOutputFrames(){ return this._nVirtualOutputFrames;}\n\n  get playingAt(){\n    return this._playingAt;\n  }\n\n  get node(){ return this._node; }\n  set tempo(tempo){ this._soundtouch.tempo = tempo; }\n  get tempo(){ return this._soundtouch.tempo; }\n  set pitch(pitch){ this._soundtouch.pitch = pitch; }\n  get rate(){ return this._soundtouch.rate; }\n\n  get recordedBuffer(){ \n    if (this._recordedBuffer === null) this.createProcessedBuffer();\n    return this._recordedBuffer; \n  }\n\n  set onEnd(func){ this._onEnd = func; }\n  set onUpdate(func){ this._onUpdate = func; }\n  set updateInterval(val){ this._updateInterval = val;}\n  get updateInterval(){ return this._updateInterval;}\n\n  stop(){ \n    if (this._node.onaudioprocess) {\n      console.log(this.name, 'shifter stop');\n      this._node.onaudioprocess = null; \n      this._node.disconnect();\n      if (this._recordedBuffer === null) this.createProcessedBuffer();\n      this._onUpdate(this._playingAt);\n      this._onEnd(this._recordedBuffer); \n    }\n  }\n\n  createProcessedBuffer(){\n\n    if (!this.record) return;\n\n    const outputBuffer = this.context.createBuffer(\n      this.recordedSamples.length, // channels\n      this.recordedSamples[0].length, // sample length\n      this.sampleRate\n    );\n\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n    left.set(this.recordedSamples[0]);\n    right.set(this.recordedSamples[1]);\n    // Typedarray.set(array[, offset])\n\n    this._recordedBuffer = outputBuffer;\n\n  } // end createProcessedBuffer()\n\n  onaudioprocess(e){\n    // console.log('onaudioprocess()');\n\n    if (this.bypass) { // pass through for test\n      if (this._nVirtualOutputFrames <= this._totalInputFrames){\n        this.passThrough(e.inputBuffer,e.outputBuffer); // through for test\n        this._nVirtualOutputFrames += e.outputBuffer.length;\n      } else this.stop();\n    } else {\n      if (this._nVirtualOutputFrames <= this._totalInputFrames){\n        const nOutputFrames = this.process(e.inputBuffer,e.outputBuffer);\n        this._nVirtualOutputFrames += nOutputFrames*this._soundtouch.tempo;\n      } else this.stop();\n    }\n\n   this._playingAt = this._nVirtualOutputFrames/this.sampleRate;\n\n   if (this.playingAt - this.lastPlayingAt >= this._updateInterval) {\n      this._onUpdate(this._playingAt);\n      this.lastPlayingAt = this._playingAt;\n   }\n\n   this.nInputFrames += e.inputBuffer.length; \n\n    return true;\n  }\n\n  process(inputBuffer,outputBuffer) { // using soundtouchjs \n    // console.log('MyPitchShifter process');\n    // input part\n    const leftIn = inputBuffer.getChannelData(0);\n    const rightIn = inputBuffer.getChannelData(1);\n    const inSamples = this.inSamples; // LR Interleave\n    const left = outputBuffer.getChannelData(0);\n    const right = outputBuffer.getChannelData(1);\n\n    for (let i = 0; i < inputBuffer.length; i++) {\n        inSamples[2*i] = leftIn[i]; \n        inSamples[2*i + 1] = rightIn[i]; \n    }\n    this._filter.putSource(inSamples);\n\n   // Output  node.onaudioprocess in function getWebAudioNode\n   // context, filter, sourcePositionCallback\n    const outSamples = this.outSamples;\n    const framesExtracted = this._filter.extract(outSamples, this.bufferSize);\n\n    for (let i=0; i < framesExtracted; i++) {\n      left[i]  = outSamples[i * 2]; \n      right[i] = outSamples[i * 2 + 1];\n      if (this.record) {\n        this.recordedSamples[0].push(left[i]);\n        this.recordedSamples[1].push(right[i]);\n      }\n    } \n\n    return framesExtracted;\n\n  } // End process\n\n // just copy inputBuffer to outputBuffer for test \n  passThrough(inputBuffer, outputBuffer){ \n    const nc = outputBuffer.numberOfChannels;\n    for (let channel=0; channel < nc; channel++){\n      const input = inputBuffer.getChannelData(channel);\n      const output = outputBuffer.getChannelData(channel);\n      output.set(inputBuffer.getChannelData(channel)); \n\n      if (this.record) \n        for (let i = 0; i < outputBuffer.length; i++) \n          this.recordedSamples[channel].push(input[i]);\n    }\n\n  } // End pathThrough()\n\n  exportToFile (filename){\n    if (!this.record) return;\n\n    console.log ('exportToFile: ', filename,\n      'length: ', this.recordedSamples[0].length);\n\n    if (this._recordedBuffer === null) this.createProcessedBuffer();\n\n    const blob = new Blob([toWav(this._recordedBuffer)], \n       {type: 'audio/vnd.wav'});\n    saveAs(blob, filename);\n\n    return;\n  } // end exportToFile()\n\n};\n","import { Component } from 'react';\n\n// material-ui Icons, Tooltip\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\nimport PauseCircleOutlineOutlinedIcon\n        from '@material-ui/icons/PauseCircleOutlineOutlined';\n\nexport default class PlayButton extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      nextAction: props.nextAction,\n      m : props.messages,\n    };\n    this.handler = props.handler;\n  }\n\ncomponentDidUpdate(prevProps) {\n  if (prevProps.nextAction !== this.props.nextAction) {\n    this.setState({nextAction: this.props.nextAction}); \n  }\n  if (prevProps.messages !== this.props.messages) {\n    this.setState({m: this.props.messages}); \n  }\n}\n\n// PlayButton \n  render(){\n    const {nextAction,m} = this.state;\n\n    let icon = null;\n    switch(nextAction){\n         case 'load files first!':\n           icon = \n             <Tooltip title={m.alert}>\n             <span><IconButton\n             onClick={() => this.handler({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon color='disabled'/>\n             </IconButton></span></Tooltip>;\n         break;\n         case 'Play': \n           icon = <Tooltip title={m.playButton}><IconButton  \n             onClick={() => this.handler({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon color='primary' />\n             </IconButton></Tooltip>;\n         break;\n         case 'Resume':\n           icon = <IconButton  \n             onClick={() => this.handler({target: {name: 'startPause'}})} >\n             <PlayCircleOutlineIcon style={{color: '#00aa00' }} />\n             </IconButton>;\n         break;\n         case 'Pause': \n           icon = <IconButton  \n             onClick={() => this.handler({target: {name: 'startPause'}})} >\n             <PauseCircleOutlineOutlinedIcon color='primary' />\n             </IconButton>;\n         break;\n         default:\n           icon = 'undefined';\n       }\n       return(<span>{icon}</span>);\n\n     } // end render\n\n};\n","import { Component } from 'react';\n\n// material-ui Icons\nimport { IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport RemoveIcon from '@material-ui/icons/Remove';\n\nexport default class SpeedPitchControls extends Component {\n  constructor(props){\n    super();\n\n    this.state = {\n      playSpeed: props.playSpeed,\n      playPitch: props.playPitch,\n      m : props.messages,\n    };\n\n    this.setSpeed = props.setSpeed;\n    this.setPitch = props.setPitch;\n  }\n\ncomponentDidUpdate(prevProps) {\n  if (prevProps.playSpeed !== this.props.playSpeed) {\n    this.setState({playSpeed: this.props.playSpeed}); \n  }\n\n  if (prevProps.playPitch !== this.props.playPitch) {\n    this.setState({playPitch : this.props.playPitch}); \n  }\n\n  if (prevProps.messages !== this.props.messages) {\n    this.setState({m: this.props.messages}); \n  }\n}\n\n  render(){\n    const {m} = this.state;\n\n    return(<span>\n    <span>\n     <div className='text-divider'>{m.speedTitle1} \n       (<font color= 'green'>{(100*this.state.playSpeed).toFixed(0)}%)</font>\n       &nbsp; {m.speedTitle2}\n    </div>\n\n      <center>\n     &plusmn; 10% <IconButton \n         onClick={() => this.setSpeed({target: {name: 'sub10'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n         onClick={() => this.setSpeed({target: {name: 'add10'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     &plusmn; 1% <IconButton\n        onClick={() => this.setSpeed({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setSpeed({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n</center>\n\n     <div className='text-divider'>{m.pitchTitle}&nbsp; \n (<font color='green'>{this.state.playPitch.toFixed(1)}</font>) (-12 -- +12)</div>\n<center>\n     b/# <IconButton\n        onClick={() => this.setPitch({target: {name: 'sub1'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setPitch({target: {name: 'add1'}})} > \n     <AddIcon color='primary'/> </IconButton>\n     &nbsp;&nbsp;&nbsp;\n     &plusmn; 10 cents <IconButton\n        onClick={() => this.setPitch({target: {name: 'sub10c'}})} > \n     <RemoveIcon color='primary'/> </IconButton>\n     <IconButton\n        onClick={() => this.setPitch({target: {name: 'add10c'}})} > \n     <AddIcon color='primary'/> </IconButton>\n      </center></span>\n\n      </span>); \n\n\n  } // end render\n\n};\n","import { Component} from 'react';\nimport '../App.css';\n\nexport default class TrackGainSlider extends Component {\n  constructor(props){\n   super();\n   this.state = {\n     gain: props.gain,\n   }\n   this.id = props.id;\n   this.trackName = props.trackName;\n   this.handler = props.handler;\n  } \n\n componentDidUpdate(prevProps) {\n   if (prevProps.gain !== this.props.gain) {\n     this.setState({gain: this.props.gain});\n   }\n }\n\n  render(){\n   if (this.state.gain === undefined || !this.trackName === undefined) return null;\n\n   return (<div className='slider'>\n    {this.trackName} ({this.state.gain})<br />\n     0 <input type='range' id={this.id} name='gainSlider'\n        min='0' max='100' value={this.state.gain}\n        onChange={this.handler} /> 100\n   </div>);\n  } // end render\n\n}; // End class TrackGainSlider\n","import { Component } from 'react';\nimport TrackGainSlider from './TrackGainSlider';\n\nexport default class TrackGainSliderList extends Component {\n  constructor(props){\n    super();\n    this.inputAudio = props.inputAudio;\n    this.handler = props.handler;\n    this.state = {\n     gains: props.gains,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.inputAudio !== this.props.inputAudio){\n      this.setState({inputAudio: this.props.inputAudio});\n    }\n\n    if (prevProps.gains !== this.props.gains) {\n      this.setState({gains: this.props.gains});\n    }\n  }\n\n  render(){\n    if (this.inputAudio.length > 9) return null;\n    // max 8 tracks + record\n\n    // ugly but to avoid dynamic rendering\n    return (<div><center>\n     {this.inputAudio[0] ? <TrackGainSlider id={0} \n        trackName={this.inputAudio[0].name} \n        gain={this.state.gains[0]} handler={this.handler} /> : null}\n     {this.inputAudio[1] ? <TrackGainSlider id={1} \n        trackName={this.inputAudio[1].name} \n        gain={this.state.gains[1]} handler={this.handler} /> : null}\n     {this.inputAudio[2] ? <TrackGainSlider id={2} \n        trackName={this.inputAudio[2].name} \n        gain={this.state.gains[2]} handler={this.handler} /> : null}\n     {this.inputAudio[3] ? <TrackGainSlider id={3} \n        trackName={this.inputAudio[3].name} \n        gain={this.state.gains[3]} handler={this.handler} /> : null}\n     {this.inputAudio[4] ? <TrackGainSlider id={4} \n        trackName={this.inputAudio[4].name} \n        gain={this.state.gains[4]} handler={this.handler} /> : null}\n     {this.inputAudio[5] ? <TrackGainSlider id={5} \n        trackName={this.inputAudio[5].name} \n        gain={this.state.gains[5]} handler={this.handler} /> : null}\n     {this.inputAudio[6] ? <TrackGainSlider id={6} \n        trackName={this.inputAudio[6].name} \n        gain={this.state.gains[6]} handler={this.handler} /> : null}\n     {this.inputAudio[7] ? <TrackGainSlider id={7} \n        trackName={this.inputAudio[7].name} \n        gain={this.state.gains[7]} handler={this.handler} /> : null}\n     {this.inputAudio[8] ? <TrackGainSlider id={8} \n        trackName={this.inputAudio[8].name} \n        gain={this.state.gains[8]} handler={this.handler} /> : null}\n     </center></div>);\n\n  } // end render\n\n}; // End class TrackGainSliders\n","/*\n   Written by goto at kmgoto.jp (Mar. 2021)\n   Copyright of my code is not claimed.\n\n   Based on soundtouchjs/src/PitchShifter.js, SimpleFilter.js\n\n   AudioWorkletNode and AudioWorkletProcessor is used if available.\n\n   AudioWorkletProcessor code is in public/worklet/ \n      (public is the document root.)\n\n   Status:\n     ScriptProcessorNode (Chrome, Firefox, Safari)\n       -- AudioContext, OfflineAudioContext (e.renderedBuffer is NOT usable)\n\n     AudioWorkletNode/AudioWorkletProcessor (Chrome, Firefox)\n       -- AudioContext, OfflineAudioContext (e.renderedBuffer is usable)\n\n     Safari does not implement AudioWorklet at all.\n     This app is quite memory intensive and may not work on smartphones.\n\n   See details in docs/ and demo page.\n\n */\n\nimport { Component }  from 'react';\nimport './App.css';\nimport checkAudioWorklet from './jslibs/checkAudioWorklet';\nimport MyPitchShifter from './jslibs/MyPitchShifter'; // soundtouchJS\n\n// UI Components\nimport PlayButton from './jslibs/PlayButton';\nimport SpeedPitchControls from './jslibs/SpeedPitchControls';\nimport TrackGainSliderList from './jslibs/TrackGainSliderList';\n\nimport packageJSON from '../package.json';\nimport messages from './messages.json'; // English/Japanese messages\n\n// material-ui Icons, Tooltip\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport StopOutlinedIcon from '@material-ui/icons/StopOutlined';\nimport LoopOutlinedIcon from '@material-ui/icons/LoopOutlined';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport PlayCircleFilledWhiteIcon \n   from '@material-ui/icons/PlayCircleFilledWhite';\nimport NotInterestedIcon from '@material-ui/icons/NotInterested';\nimport MoodIcon from '@material-ui/icons/Mood';\nimport MicIcon from '@material-ui/icons/Mic';\n\n// get subversion string \nconst version = packageJSON.subversion;\n\n// switch languages\nlet defaultLang = 'en';\nlet m = messages.en;\nconsole.log(window.navigator.language);\nif (window.navigator.language.slice(0,2) === 'ja') {\n  defaultLang = 'ja'; \n  m = messages.ja;\n}\n\n\n// For Safari\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst OfflineAudioContext \n    = window.OfflineAudioContext || window.webkitOfflineAudioContext;\n\nconst result = checkAudioWorklet();\n\nconst {isAudioContext, isOfflineAudioContext, isAudioWorkletNode,\n       isAudioWorklet, isAddModule, isOfflineAddModule,\n       isOfflineAudioWorklet } = result;\n\nconst isAudioWorkletAvailable = isAudioContext & isAudioWorkletNode \n      & isAudioWorklet & isAddModule;\nconst isOfflineAudioWorkletAvailable = isOfflineAudioContext \n      & isAudioWorkletNode & isOfflineAudioWorklet & isOfflineAddModule;\n\nconsole.log('AudioWorklet available? :', \n'online: ', isAudioWorkletAvailable ? 'true' : 'false',\n', offline: ', isOfflineAudioWorkletAvailable ? 'true' : 'false');\n\n// Conditional dynamic import only if AudioWorklet is available\n\nclass App extends Component {\n\n  constructor (props) {\n    super();\n    this.audioCtx = null;\n    this.inputAudio = [];\n    this.mixedSource = null;\n    this.masterGainNode = null;\n \n    this.state = {\n      language: defaultLang,\n      isPlaying: false,\n      timeA: 0,\n      playingAt: 0,\n      timeB: 0, \n      loop: false,\n      loopDelay: 2,\n      playButtonNextAction: 'load files first!',\n      gains: [],\n      masterGain: 75,\n      playSpeed: 1.0,\n      playPitch: 0.0,\n      bypass: false,\n      useAudioWorklet: isAudioWorkletAvailable,\n      micOn: false,\n    };\n\n    this.shifter = null;\n\n    this.loadFiles = this.loadFiles.bind(this);\n    this.handlePlay = this.handlePlay.bind(this);\n    this.handleGainSlider = this.handleGainSlider.bind(this);\n    this.handleTimeSlider = this.handleTimeSlider.bind(this);\n    this.playAB = this.playAB.bind(this);\n    this.setSpeed = this.setSpeed.bind(this);\n    this.setPitch = this.setPitch.bind(this);\n    this.switchLanguage = this.switchLanguage.bind(this);\n  }   \n\n  componentWillUnmount () { // before closing app\n    if (this.audioCtx !== null) this.audioCtx.close();\n  }\n\n\n  render(){\n\n    return (\n     <div className=\"App\">\n     {m.title}\n     <br />\n     <center>\n     (language) &ensp;\n     <span className='tiny-button'>\n     <Tooltip title={m.switchLang}>\n      <button onClick = {this.switchLanguage}>\n      {this.state.language === 'ja' ? 'EN' : 'JP' }</button>\n     </Tooltip>\n     </span>\n     &ensp;(AudioWorklet)\n     <Tooltip title={m.worklet}>\n     <IconButton name='toggleWorklet'\n     onClick = {\n       () => {\n        if (isAudioWorkletNode)\n        this.setState({useAudioWorklet: !this.state.useAudioWorklet});}\n     } >\n     <MoodIcon color={this.state.useAudioWorklet? 'primary':'disabled'} />\n     </IconButton>\n     </Tooltip>\n     </center>\n     <hr />\n     <span className=\"selectFile\">\n     <Tooltip title={m.fileReader}>\n     <input type=\"file\" name=\"loadFiles\" multiple\n        accept=\"audio/*\" onChange={this.loadFiles} />\n     </Tooltip>\n     &emsp;<span className='tiny-button'>\n     <Tooltip title={m.clearFiles}>\n     <button name='clearFile' onClick = {() => {\n       this.setState({gains: [], \n       playButtonNextAction: 'load files first!'});\n       this.inputAudio = []; }} \n     >{m.clearButton}</button></Tooltip></span>\n     <br />\n     </span><br/>\n     <div className='text-divider'>{m.timeTitle}&nbsp;\n      ({m.timeSliderPosition}:&nbsp; \n       <font color='green'>{this.state.playingAt.toFixed(2)}</font>)\n     </div>\n     <center>\n     A: {this.state.timeA.toFixed(2)} -- B: {this.state.timeB.toFixed(2)}\n     &emsp; song length: {this.inputAudio[0] ? \n          this.inputAudio[0].data.duration.toFixed(2) : 0.00}\n     <br />\n     <div className='slider'>\n     <Tooltip title={m.timeSlider}>\n     <input type='range' name='timeSlider'\n       min='0' max= {this.inputAudio[0] ? \n              this.inputAudio[0].data.duration : 0}\n       value={this.state.playingAt}\n       onChange={this.handleTimeSlider}\n     />\n     </Tooltip>\n     </div>\n     <span className='tiny-button'>\n     <Tooltip title={m.setA}>\n     <button name='setA' \n        onClick={()=> this.setState({timeA: this.state.playingAt})}>\n        set A\n     </button>\n     </Tooltip>\n      &emsp;\n     <Tooltip title={m.setB}>\n     <button name='setB' \n        onClick={()=> this.setState({timeB: this.state.playingAt})}>\n        set B\n     </button>\n     </Tooltip>\n      &emsp;\n     <Tooltip title={m.resetAB}>\n     <button name='reset' \n        onClick={()=> this.setState({timeA: 0, timeB: this.inputAudio[0].data.duration})}>reset\n     </button>\n     </Tooltip>\n     </span>\n     </center>\n\n     <div className='text-divider'>{m.playerTitle}</div>\n     <center>\n    <Tooltip title={m.record}>\n    <IconButton \n     onClick={()=> this.setState({micOn: !this.state.micOn})} >\n    <MicIcon color={this.state.micOn ? 'secondary' : 'primary'} />\n    </IconButton>\n    </Tooltip>\n    <PlayButton \n      nextAction={this.state.playButtonNextAction}\n      handler={this.handlePlay}\n      messages={m}\n   />\n     <Tooltip title={m.stopButton}>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'stop'}})} >\n       <StopOutlinedIcon \n     color={this.inputAudio.length ? 'primary' : 'disabled'} />\n     </IconButton>\n     </Tooltip>\n     <Tooltip title={m.loopButton}>\n     <IconButton  \n       onClick={() => {this.setState({loop: !this.state.loop});}} >\n       <LoopOutlinedIcon \n       color={this.state.loop ? 'secondary' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n\n     <Tooltip title={m.exportButton} aria-label='exportFile'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'exportFile'}})} >\n       <GetAppIcon \n       color={!this.inputAudio.length || this.state.isPlaying ? 'disabled' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n\n     <Tooltip title={m.playMixButton} aria-label='playMix'>\n     <IconButton  \n       onClick={() => this.handlePlay({target: {name: 'playMix'}})} >\n       <PlayCircleFilledWhiteIcon\n       color={!this.inputAudio.length || this.state.isPlaying ? 'disabled' : 'primary'} />\n     </IconButton>\n     </Tooltip>\n     <Tooltip title={m.bypassButton}>\n     <IconButton\n       onClick={() => this.setState({bypass: !this.state.bypass})}>\n       <NotInterestedIcon\n       color={this.state.bypass ? 'disabled' : 'primary'} />\n    </IconButton>\n     </Tooltip>\n\n     </center>\n\n    {this.state.bypass ?  '' : \n    <SpeedPitchControls \n      playSpeed={this.state.playSpeed}\n      playPitch={this.state.playPitch}\n      setSpeed={this.setSpeed}\n      setPitch={this.setPitch}\n      messages={m}\n    />\n    }\n\n     <div className='slider' key='master'>\n       <div className='text-divider'>{m.masterGainTitle}&nbsp;\n       ({this.state.masterGain})</div>\n       <center>\n       0 <input type='range' id='master' name='gainSlider' \n          min='0' max='150' value={this.state.masterGain} \n           onChange={this.handleGainSlider} /> 150\n       </center>\n     </div>\n     <div className='text-divider'>{m.trackGainTitle}</div>\n     <TrackGainSliderList\n        inputAudio={this.inputAudio} \n        gains={this.state.gains}\n        handler={this.handleGainSlider}\n     />\n     <hr />\n     {m.version}: {version} &nbsp;&nbsp;\n     <a href={m.url}\n     target='_blank' rel='noreferrer'>{m.guide}</a><br />\n     {m.credit}&nbsp; \n     <a href=\"https://github.com/cutterbl/SoundTouchJS\"\n     target='_blank' rel='noreferrer'>SoundTouchJs</a><br />\n     <hr />\n     </div>\n    );\n  }\n\n  async loadFiles(event){\n\n    if (event.target.name !== 'loadFiles') return;\n    if (event.target.files.length === 0) return;\n    const files = event.target.files; \n\n    console.log('loadFiles');\n    if (this.audioCtx === null) {\n      console.log('AudioContext');\n      this.audioCtx = new AudioContext();\n      try {\n        if (isAudioWorkletAvailable) {\n          await this.loadModule(this.audioCtx,'worklet/bundle.js');\n          console.log('AudioContext worklet module loaded');\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    }\n\n    for (let i=0; i < files.length; i++){\n      const reader = new FileReader();\n\n      reader.onload = function (e){\n       this.audioCtx.decodeAudioData(reader.result,\n         function (audioBuffer) {\n           if (audioBuffer.numberOfChannels !== 2) {\n             alert ('Sorry, only stereo files are supported');\n             return;\n           }\n           this.inputAudio.push({\n              name: files[i].name,\n              data: audioBuffer,\n              source: null,\n              gainNode: null,\n              gain: 100,\n           });\n      \n           const gains = this.state.gains; gains.push(100);\n\n           this.setState({\n             playButtonNextAction: 'Play',\n               timeA: 0,\n               playingAt: 0,\n               timeB: this.inputAudio[0].data.duration, \n               gains: gains,\n           });\n\n     // this.inputAudio.sort((a,b) => a.name - b.name); // mmm.. does not work\n\n         }.bind(this),\n\n         function (error) { console.log (\"decode error: \" + error.err) }\n       )\n\n      }.bind(this)\n\n      reader.onerror = function (e){ console.log(\"File read \", reader.error);}\n      reader.readAsArrayBuffer(files[i]);\n\n    } // end for\n\n  } // end loadFiles()\n\n  handleTimeSlider(event){\n\n    if(event.target.name !== 'timeSlider') return;\n\n    if (!this.state.isPlaying)\n      this.setState({playingAt: parseFloat(event.target.value)});\n  }\n\n  handlePlay(event){\n\n    console.log('handlePlay name/button', \n       event.target.name, this.state.playButtonNextAction);\n\n    if (this.inputAudio.length === 0) alert(m.alert);\n\n    if (event.target.name === 'startPause') {\n\n      switch(this.state.playButtonNextAction){\n\n        case 'Pause':\n          console.log('Pause');\n          if(this.audioCtx) this.audioCtx.suspend();\n          this.setState ({\n            playButtonNextAction: 'Resume',\n            isPlaying: false \n          });\n        break;\n\n        case 'Resume': \n          console.log('Resume');\n          if (this.audioCtx.state === 'suspended') this.audioCtx.resume();\n          this.setState ({\n            playButtonNextAction: 'Pause', \n            isPlaying: true\n          });\n        break;\n\n        case 'Play':\n          console.log('Play');\n          if (this.inputAudio.length === 0) break;\n           this.playAB (0, this.state.timeA, this.state.timeB);\n\n          this.setState ({playButtonNextAction: 'Pause'})\n        break;\n\n        default:\n          console.log('default', this.state.playButtonNextAction);\n      }\n\n      return;\n    }\n\n    if (event.target.name === 'stop') {\n      if (this.shifter) this.shifter.stop();\n      if (this.mixedSource) this.mixedSource.stop();\n\n      this.setState ({loop: false, playButtonNextAction: 'Play', \n          playingAt: this.state.timeA})\n\n      return;\n    }    \n\n    if (event.target.name === 'exportFile' \n       || event.target.name === 'playMix'){\n\n      if (this.inputAudio.length === 0 || this.state.isPlaying) return;\n\n      const recording = true;\n      let offline = isOfflineAudioContext;\n      // if (iOS) { offline = false; }\n      this.playAB (0, this.state.timeA, this.state.timeB, \n          recording, offline, event.target.name);\n\n      return;\n    }\n\n  } // end handlePlay()\n\n  handleGainSlider(event){\n    if (event.target.name !== 'gainSlider') return;\n//       console.log ('slider id= ', event.target.id);\n// \n    if (event.target.id === 'master'){\n      this.setState({masterGain: parseFloat(event.target.value)});\n      if (this.masterGainNode)\n        this.masterGainNode.gain.value = parseFloat(event.target.value/100.0);\n      return;\n    }\n\n    const index = parseInt(event.target.id);\n\n    const gains = this.state.gains;\n    gains[index] = parseInt(event.target.value);\n    this.setState({gains: gains});\n    if (this.inputAudio[index].gainNode !== null)\n      this.inputAudio[index].gainNode.gain.value \n           = parseFloat(event.target.value/100.0); \n\n  } // End handleGainSlider()\n\n  setSpeed(e){\n    let speed = this.state.playSpeed;\n    switch(e.target.name){\n      case 'sub10': speed -=0.1; break;\n      case 'add10': speed +=0.1; break;\n      case 'sub1': speed -=0.01; break;\n      case 'add1': speed +=0.01; break;\n      default:\n    }\n    if (speed < 0.5) speed = 0.5;\n    else if (speed > 2.0) speed = 2.0;\n\n    if (this.shifter) this.shifter.tempo = speed;\n\n    this.setState({playSpeed: speed});\n  } // End set speed\n\n  setPitch(e){\n    let pitch = this.state.playPitch;\n    switch(e.target.name){\n      case 'sub1': pitch -=1; break;\n      case 'add1': pitch +=1; break;\n      case 'sub10c': pitch -=0.1; break;\n      case 'add10c': pitch +=0.1; break;\n      default:\n    }\n\n    if (pitch < -12) pitch = -12.0;\n    else if (pitch > 12) pitch = 12.0\n\n    if (this.shifter) this.shifter.pitch = Math.pow(2.0,pitch/12.0);\n\n    this.setState({playPitch: pitch});\n\n  } // End setPitch\n\n  switchLanguage(e) {\n\n    if (this.state.language === 'ja') {\n      m = messages.en; \n      this.setState({language: 'en'});\n    } else {\n      m = messages.ja; \n      this.setState({language: 'ja'});\n    }\n  } // End switchLanguage()\n\n  async playAB(delay, timeA, timeB, recording = false, \n       offline = false, exporter='none'){\n\n    console.log('playAB', \n       'delay, timeA, timeB, recording, offline, exporter = ', \n       delay, timeA, timeB, recording, offline, exporter);\n\n    if (this.state.isPlaying) return;\n    if (this.audioCtx.state === 'suspended' ) this.audioCtx.resume();\n\n    const sampleRate = this.inputAudio[0].data.sampleRate;\n    const channels = this.inputAudio[0].data.numberOfChannels;\n    const nInputFrames = (timeB - timeA)*sampleRate;\n    const nOutputFrames = Math.max(nInputFrames, \n                      nInputFrames/this.state.playSpeed);\n\n    let context = null;\n    if (offline){\n      context = new OfflineAudioContext (\n        channels,\n        nOutputFrames*1.1, // add 10%\n        sampleRate \n      );\n      if (this.state.useAudioWorklet) {\n        await this.loadModule (context, 'worklet/bundle.js');\n        console.log('OfflineAudioContext Worklet module loaded');\n      }\n      if (OfflineAudioContext.suspend) context.suspend();\n    } else context = this.audioCtx;\n\n    this.setState({isPlaying : true});\n\n    let updateInterval = 1.0;\n    if (offline) updateInterval = 10.0;\n\n    const options = { // For worklet \n      processorOptions: {\n        bypass: this.state.bypass,\n        recording: false, // recording is done in OfflineAudioContext\n        nInputFrames: nInputFrames, \n        updateInterval: updateInterval, \n        sampleRate: sampleRate\n      },\n    };\n\n    let shifter = null;\n    if (!this.state.useAudioWorklet) { \n        // Offline worklet not working perfectly yet\n      shifter = new MyPitchShifter( context, nInputFrames, \n        4096, recording, this.state.bypass); // ScriptProcessorNode\n      shifter.updateInterval = updateInterval;\n    } else { // Use worklet\n      try {\n        // Dynamic import to avoid \"Safari misses AudioWorkletnode\"\n        const module\n          = await import('./jslibs/MyPitchShifterWorkletNode');\n        shifter = new module.default(context, \n          'my-soundtouch-processor', options); \n           console.log('AudioWorkletNode functional');\n        shifter.updateInterval = updateInterval;\n      } catch (err) { \n        console.log(err);\n        shifter = null;\n        shifter = new MyPitchShifter( context, nInputFrames, \n          4096, recording, this.state.bypass); // ScriptProcessorNode\n        shifter.updateInterval = updateInterval;\n        console.log('Worklet failed. Fallback to ScriptProcessorNode');\n        // Creation of shifter does not work for Online (reason unknown)\n\n      }\n    } // end if useAudioWorklet \n\n    if (!offline) this.shifter = shifter;\n\n    shifter.tempo = this.state.playSpeed;\n    shifter.pitch = Math.pow(2.0,this.state.playPitch/12.0);\n\n/*\n    const dummySourceNode = context.createOscillator();\n    const zeroGain = context.createGain(); zeroGain.gain.value = 0.2;\n    dummySourceNode.connect(zeroGain); zeroGain.connect(shifter); \n*/\n\n    for (let i=0; i < this.inputAudio.length; i++){\n      const source = context.createBufferSource();\n       if (i === 0)\n         source.buffer = this.addZeros(context,this.inputAudio[i].data);\n       else \n        source.buffer = this.inputAudio[i].data;\n        this.inputAudio[i].source = source;\n      const gainNode = context.createGain();\n        gainNode.gain.value = this.state.gains[i]/100.0;\n        this.inputAudio[i].gainNode = gainNode;\n      source.connect(gainNode);\n      gainNode.connect(shifter.node);\n    }\n\n\n  if (!offline) {\n    const masterGainNode = context.createGain();\n    masterGainNode.gain.value = this.state.masterGain/100.0;\n    this.masterGainNode = masterGainNode;\n    shifter.node.connect(masterGainNode);\n    masterGainNode.connect(context.destination);\n  } else shifter.node.connect(context.destination);\n\n\n    const begin = context.currentTime + delay;\n    for (let i=0; i < this.inputAudio.length; i++)\n      this.inputAudio[i].source.start(begin, timeA);\n\n    // dummySourceNode.start(begin, timeA);\n\n    if (offline) {\n      console.log('startRendering');\n      context.startRendering();\n    }\n\n    /*\n    this.inputAudio[0].source.onended = function(e) {\n      console.log('source 0 onended At', this.state.playingAt);\n    }.bind(this);\n    */\n\n    shifter.onUpdate = function(val) { \n      this.setState({playingAt: timeA + val});\n    }.bind(this);\n\n    if (offline) {\n      context.oncomplete = function(e) {\n        console.log( \n         'Offline render complete (data is useless though) length = ',\n          e.renderedBuffer.length);\n\n        if (this.state.useAudioWorklet){\n          if (exporter === 'exportFile') {\n            console.log('exportFile in oncomlete'); \n            shifter.exportToFile('mix_' + Date.now() + '.wav', \n           e.renderedBuffer);\n          } else if (exporter === 'playMix') {\n            console.log('playMix in oncomlete'); \n            this.playSource(e.renderedBuffer);\n          } else console.log('exporter unknown: ', exporter);\n         }\n      }.bind(this);\n    }\n\n    shifter.onEnd = function(recordedBuffer) { \n       // recordedBuffer made in shifter from worklet's message data\n      console.log('shifter onEnd');\n\n      for (let i=0; i < this.inputAudio.length; i++)\n        this.inputAudio[i].gainNode.disconnect();\n\n      this.setState({isPlaying: false});\n\n      if (!this.state.useAudioWorklet) {\n        if (exporter === 'exportFile' ) {\n         shifter.exportToFile('mix_' + Date.now() + '.wav');\n          this.setState({isPlaying: false}); // audioBuffer is in the shifter\n        } else if (exporter === 'playMix')\n          this.playSource(recordedBuffer);\n      }\n\n   }.bind(this);\n\n  } // END playAB\n\n  async loadModule (\n    context,filename,moduleName,workletOptions) {\n      if (!context) return false;\n      let name = context.constructor.name;\n\n      try {\n        await context.audioWorklet.addModule(filename);\n        //console.log(name, 'AudioWorklet loaded');\n      } catch(e) {\n        console.log(e, name, 'AudioWorklet load failed');\n        return null\n      }\n\n    return true;\n  }\n\n  addZeros(context,input){ // return zero padded double length AudioBuffer\n    console.log('addZeros');\n    const output = context.createBuffer(\n      input.numberOfChannels, \n      input.length*2*1.05, // extra 5%\n      input.sampleRate\n    ); // additional 5 sec\n\n    for (let ch = 0; ch < output.numberOfChannels; ch++){\n      const inSamples = input.getChannelData(ch);\n      const outSamples = output.getChannelData(ch);\n      outSamples.set(inSamples);\n    }\n\n    return output;\n  } // End addZeros()\n\n\n  playSource(audioBuffer){ \n     if (audioBuffer === null) {console.log('audioBuffer null'); return;}\n\n     const context = this.audioCtx;\n     this.setState({isPlaying: true, playButtonNextAction: 'Pause'});\n     const source = context.createBufferSource();\n     this.mixedSource = source;\n     source.buffer = audioBuffer;\n     const masterGainNode = context.createGain();\n       this.masterGainNode = masterGainNode;\n       masterGainNode.gain.value = this.state.masterGain/100;\n     source.connect(this.masterGainNode);\n       masterGainNode.connect(context.destination);\n     source.start();\n\n     source.onended = function(e) {\n       this.mixedSource = null;\n       this.setState({isPlaying: false});\n     }.bind(this);\n  }\n\n}; // end class\n\nexport default App;\n","/* by goto at kmgoto.jp (Mar. 2021) */\n\nexport default function checkAudioWorklet() {\n\n  const AudioContext = window.AudioContext || window.webkitAudioContext;\n  const OfflineAudioContext = window.OfflineAudioContext \n      || window.webkitOfflineAudioContext;\n\n  let isAudioContext = false;\n  let isOfflineAudioContext = false;\n  let isAudioWorkletNode = false;\n  let isAudioWorklet = false;\n  let isOfflineAudioWorklet = false;\n  let isAddModule = false;\n  let isOfflineAddModule = false;\n\n  if (typeof AudioContext === 'function') isAudioContext = true;\n  if (typeof OfflineAudioContext === 'function') isOfflineAudioContext = true;\n  if (typeof AudioWorkletNode === 'function') isAudioWorkletNode = true;\n\n  if (isAudioContext) {\n    const context = new AudioContext();\n    try {\n      if (typeof context.audioWorklet !== 'undefined') {\n        isAudioWorklet = true;\n        if (typeof context.audioWorklet.addModule === 'function') \n        isAddModule = true;\n      }\n    } catch(e) {console.log(e);}\n    context.close();\n  }\n\n  if (isOfflineAudioContext){\n    const context = new OfflineAudioContext(1,1,44100);\n    try {\n      if (typeof context.audioWorklet !== 'undefined'){ \n        isOfflineAudioWorklet = true;\n        if (typeof context.audioWorklet.addModule === 'function') \n          isOfflineAddModule = true;\n        }\n    } catch(e) {console.log(e);}\n  }\n\n  return {\n    isAudioContext: isAudioContext,\n    isOfflineAudioContext: isOfflineAudioContext,\n    isAudioWorkletNode: isAudioWorkletNode,\n    isAudioWorklet: isAudioWorklet,\n    isOfflineAudioWorklet: isOfflineAudioWorklet,\n    isAddModule: isAddModule,\n    isOfflineAddModule: isOfflineAddModule,\n  };\n} // end function\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\n/*\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n*/\n  ReactDOM.render(\n   <App />,\n  document.getElementById('root')\n  );\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// serviceWorkerRegistration.unregister();\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}